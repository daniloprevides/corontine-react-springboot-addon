{"ast":null,"code":"import _regeneratorRuntime from\"/home/danilo/projects/corontine-java-spring-addon/src/main/resources/static/recipes/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/danilo/projects/corontine-java-spring-addon/src/main/resources/static/recipes/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";/*!\n* Use the two interfaces and two objects below to register\n* the properties and attributes the Web Component is expected to receive.\n* These will be passed down as props to the React App underneath.\n*/import{PluginDto}from\"./plugin.dto\";import{PageModel}from\"./page-model.dto\";/**\n * Update this object with the initial values of the properties\n */export var componentProperties={plugins:new Array(),api:new PluginDto(),pageapi:new PluginDto(),scopes:new Array(),page:new PageModel(\"\",\"\",\"\",new Array()),getList:function(){var _getList=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(params,url){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:return _context.abrupt(\"return\",{});case 1:case\"end\":return _context.stop();}}},_callee);}));function getList(_x,_x2){return _getList.apply(this,arguments);}return getList;}(),getOne:function(){var _getOne=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(url){return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:return _context2.abrupt(\"return\",null);case 1:case\"end\":return _context2.stop();}}},_callee2);}));function getOne(_x3){return _getOne.apply(this,arguments);}return getOne;}(),createItem:function(){var _createItem=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(item,url){return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:return _context3.abrupt(\"return\",null);case 1:case\"end\":return _context3.stop();}}},_callee3);}));function createItem(_x4,_x5){return _createItem.apply(this,arguments);}return createItem;}(),updateItem:function(){var _updateItem=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(tem,url){return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:return _context4.abrupt(\"return\",null);case 1:case\"end\":return _context4.stop();}}},_callee4);}));function updateItem(_x6,_x7){return _updateItem.apply(this,arguments);}return updateItem;}(),deleteItem:function(){var _deleteItem=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee5(id,url){return _regeneratorRuntime.wrap(function _callee5$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:case\"end\":return _context5.stop();}}},_callee5);}));function deleteItem(_x8,_x9){return _deleteItem.apply(this,arguments);}return deleteItem;}()};/**\n * Update this object with the initial values of the attributes\n */export var componentAttributes={componentTitle:'Recipes Component'};","map":{"version":3,"sources":["/home/danilo/projects/corontine-java-spring-addon/src/main/resources/static/recipes/src/componentProperties.ts"],"names":["PluginDto","PageModel","componentProperties","plugins","Array","api","pageapi","scopes","page","getList","params","url","getOne","createItem","item","updateItem","tem","deleteItem","id","componentAttributes","componentTitle"],"mappings":"iZAAA;;;;EAMA,OAASA,SAAT,KAA0B,cAA1B,CACA,OAASC,SAAT,KAAqC,kBAArC,CA0CA;;GAGA,MAAO,IAAMC,CAAAA,mBAAyC,CAAG,CACvDC,OAAO,CAAE,GAAIC,CAAAA,KAAJ,EAD8C,CAEvDC,GAAG,CAAE,GAAIL,CAAAA,SAAJ,EAFkD,CAGvDM,OAAO,CAAE,GAAIN,CAAAA,SAAJ,EAH8C,CAIvDO,MAAM,CAAE,GAAIH,CAAAA,KAAJ,EAJ+C,CAKvDI,IAAI,CAAE,GAAIP,CAAAA,SAAJ,CAAc,EAAd,CAAiB,EAAjB,CAAoB,EAApB,CAAuB,GAAIG,CAAAA,KAAJ,EAAvB,CALiD,CAMvDK,OAAO,iFAAE,iBAAOC,MAAP,CAA8BC,GAA9B,kJACA,EADA,wDAAF,qFANgD,CASvDC,MAAM,gFAAE,kBAAOD,GAAP,uJACC,IADD,0DAAF,+EATiD,CAYvDE,UAAU,oFAAE,kBAAOC,IAAP,CAAiBH,GAAjB,uJACH,IADG,0DAAF,+FAZ6C,CAevDI,UAAU,oFAAE,kBAAOC,GAAP,CAAgBL,GAAhB,uJACH,IADG,0DAAF,+FAf6C,CAkBvDM,UAAU,oFAAE,kBAAOC,EAAP,CAAiBP,GAAjB,uKAAF,+FAlB6C,CAAlD,CAuBP;;GAGA,MAAO,IAAMQ,CAAAA,mBAAyC,CAAG,CACvDC,cAAc,CAAE,mBADuC,CAAlD","sourcesContent":["/*!\n* Use the two interfaces and two objects below to register\n* the properties and attributes the Web Component is expected to receive.\n* These will be passed down as props to the React App underneath.\n*/\n\nimport { PluginDto } from \"./plugin.dto\";\nimport { PageModel, FieldItem } from \"./page-model.dto\";\nimport { FindParamsDto } from \"./find-params.dto\";\n\nexport interface PaginatedResponse<T = any>{\n  items:Array<T>;\n  itemCount: number;\n  totalItems:number;\n  pageCount:number;\n  next:string;\n  previous:string;\n}\n\ntype getList<T = any> = (params?:FindParamsDto, url?: string) => Promise<PaginatedResponse<T>>;\ntype getOne<T = any> = (url?: string) => Promise<T>;\ntype createItem<T = any> = (item:any, url?: string) => Promise<T>;\ntype updateItem<T = any> = (item:any, url?: string, ) => Promise<T>;\ntype deleteItem = (id:string,url?: string) => Promise<void>;\n\n/**\n * Update this interface to reflect the types of the properties\n */\nexport interface IComponentProperties {\n  plugins: Array<PluginDto>;\n  api: PluginDto;\n  pageapi: PluginDto;\n  scopes: Array<String>;\n  page: PageModel;\n  getList: getList;\n  getOne: getOne;\n  createItem: createItem;\n  updateItem: updateItem;\n  deleteItem: deleteItem;\n}\n\n/**\n * Update this interface to reflect the attributes of the Web Component\n * NB: The type of an attribute must be primitive\n */\nexport interface IComponentAttributes {\n  componentTitle: string;\n}\n\n/**\n * Update this object with the initial values of the properties\n */\nexport const componentProperties: IComponentProperties = {\n  plugins: new Array<PluginDto>(),\n  api: new PluginDto(),\n  pageapi: new PluginDto(),\n  scopes: new Array<String>(),\n  page: new PageModel(\"\",\"\",\"\",new Array<FieldItem>()),\n  getList: async (params?:FindParamsDto, url?: string) => {\n    return {} as PaginatedResponse;\n  },\n  getOne: async (url?: string) => {\n    return null;\n  },\n  createItem: async (item:any, url?: string) => {\n    return null;\n  },\n  updateItem: async (tem:any, url?: string) => {\n    return null;\n  },\n  deleteItem: async (id:string,url?: string) => {\n\n  }\n};\n\n/**\n * Update this object with the initial values of the attributes\n */\nexport const componentAttributes: IComponentAttributes = {\n  componentTitle: 'Recipes Component',\n};\n"]},"metadata":{},"sourceType":"module"}