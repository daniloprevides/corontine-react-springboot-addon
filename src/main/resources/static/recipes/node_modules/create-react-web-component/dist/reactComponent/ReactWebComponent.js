"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
var CustomComponent_1 = __importStar(require("./CustomComponent"));
var componentAttributes = null;
var componentProperties = null;
var elementName = null;
var rootComponent = null;
var ReactWebComponent = /** @class */ (function () {
    function ReactWebComponent() {
    }
    ReactWebComponent.setAttributes = function (attributes) {
        componentAttributes = attributes;
    };
    ReactWebComponent.setProperties = function (properties) {
        componentProperties = properties;
    };
    ReactWebComponent.render = function (App, name, option) {
        rootComponent = App;
        elementName = name;
        this.validateDependencies();
        CustomComponent_1.setComponentAttributes(componentAttributes);
        CustomComponent_1.setComponentProperties(componentProperties);
        CustomComponent_1.setRootComponent(rootComponent);
        if (option) {
            CustomComponent_1.setMode(option.shadow);
        }
        this.setComponentProperties();
        customElements.define(elementName, CustomComponent_1.default);
    };
    ReactWebComponent.setComponentProperties = function () {
        if (!rootComponent) {
            return;
        }
        var properties = __assign({}, componentProperties);
        var propertyMap = {};
        Object.keys(properties).forEach(function (key) {
            var property = {
                configurable: true,
                enumerable: true,
                get: function () {
                    return properties[key];
                },
                set: function (newValue) {
                    var oldValue = properties[key];
                    properties[key] = newValue;
                    this.reactPropsChangedCallback(key, oldValue, newValue);
                },
            };
            propertyMap[key] = property;
        });
        Object.defineProperties(CustomComponent_1.default.prototype, propertyMap);
    };
    ReactWebComponent.validateDependencies = function () {
        if (!componentAttributes) {
            throw Error('Cannot define custom element: Attributes have not been set.');
        }
        if (!componentProperties) {
            throw Error('Cannot define custom element: Properties have not been set.');
        }
        if (!rootComponent) {
            throw Error('Cannot define custom element: Root Component have not been set.');
        }
        if (!elementName) {
            throw Error('Cannot define custom element: Element name has not been set.');
        }
    };
    return ReactWebComponent;
}());
exports.ReactWebComponent = ReactWebComponent;
